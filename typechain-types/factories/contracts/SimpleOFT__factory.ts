/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { SimpleOFT, SimpleOFTInterface } from "../../contracts/SimpleOFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_lzEndpoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "dstChainId",
        type: "uint16",
      },
    ],
    name: "Bridged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_CHAIN_ID",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ETHEREUM_CHAIN_ID",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "dstChainId",
        type: "uint16",
      },
    ],
    name: "bridgeTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lzEndpoint",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newEndpoint",
        type: "address",
      },
    ],
    name: "setLzEndpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611fac380380611fac8339818101604052810190610032919061042a565b338383816003908161004491906106d6565b50806004908161005491906106d6565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c95760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100c091906107b7565b60405180910390fd5b6100d88161019160201b60201c565b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013f90610855565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050610875565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102be82610275565b810181811067ffffffffffffffff821117156102dd576102dc610286565b5b80604052505050565b60006102f0610257565b90506102fc82826102b5565b919050565b600067ffffffffffffffff82111561031c5761031b610286565b5b61032582610275565b9050602081019050919050565b60005b83811015610350578082015181840152602081019050610335565b60008484015250505050565b600061036f61036a84610301565b6102e6565b90508281526020810184848401111561038b5761038a610270565b5b610396848285610332565b509392505050565b600082601f8301126103b3576103b261026b565b5b81516103c384826020860161035c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103f7826103cc565b9050919050565b610407816103ec565b811461041257600080fd5b50565b600081519050610424816103fe565b92915050565b60008060006060848603121561044357610442610261565b5b600084015167ffffffffffffffff81111561046157610460610266565b5b61046d8682870161039e565b935050602084015167ffffffffffffffff81111561048e5761048d610266565b5b61049a8682870161039e565b92505060406104ab86828701610415565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061050757607f821691505b60208210810361051a576105196104c0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026105827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610545565b61058c8683610545565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006105d36105ce6105c9846105a4565b6105ae565b6105a4565b9050919050565b6000819050919050565b6105ed836105b8565b6106016105f9826105da565b848454610552565b825550505050565b600090565b610616610609565b6106218184846105e4565b505050565b5b818110156106455761063a60008261060e565b600181019050610627565b5050565b601f82111561068a5761065b81610520565b61066484610535565b81016020851015610673578190505b61068761067f85610535565b830182610626565b50505b505050565b600082821c905092915050565b60006106ad6000198460080261068f565b1980831691505092915050565b60006106c6838361069c565b9150826002028217905092915050565b6106df826104b5565b67ffffffffffffffff8111156106f8576106f7610286565b5b61070282546104ef565b61070d828285610649565b600060209050601f831160018114610740576000841561072e578287015190505b61073885826106ba565b8655506107a0565b601f19841661074e86610520565b60005b8281101561077657848901518255600182019150602085019450602081019050610751565b86831015610793578489015161078f601f89168261069c565b8355505b6001600288020188555050505b505050505050565b6107b1816103ec565b82525050565b60006020820190506107cc60008301846107a8565b92915050565b600082825260208201905092915050565b7f4c5a20656e64706f696e742063616e6e6f74206265207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061083f6022836107d2565b915061084a826107e3565b604082019050919050565b6000602082019050818103600083015261086e81610832565b9050919050565b611728806108846000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063b353aaa711610071578063b353aaa7146102d1578063d9331a11146102ef578063dd62ed3e1461030b578063efc21e3f1461033b578063f2fde38b1461035957610116565b80638da5cb5b1461024957806395d89b4114610267578063a0712d6814610285578063a9059cbb146102a157610116565b806323b872dd116100e957806323b872dd146101a5578063313ce567146101d557806370a08231146101f3578063715018a61461022357806381fb1eab1461022d57610116565b806306fdde031461011b578063095ea7b31461013957806318160ddd146101695780631dac56d314610187575b600080fd5b610123610375565b6040516101309190611118565b60405180910390f35b610153600480360381019061014e91906111d3565b610407565b604051610160919061122e565b60405180910390f35b61017161042a565b60405161017e9190611258565b60405180910390f35b61018f610434565b60405161019c9190611290565b60405180910390f35b6101bf60048036038101906101ba91906112ab565b610439565b6040516101cc919061122e565b60405180910390f35b6101dd610468565b6040516101ea919061131a565b60405180910390f35b61020d60048036038101906102089190611335565b610471565b60405161021a9190611258565b60405180910390f35b61022b6104b9565b005b6102476004803603810190610242919061138e565b6104cd565b005b6102516105b9565b60405161025e91906113dd565b60405180910390f35b61026f6105e3565b60405161027c9190611118565b60405180910390f35b61029f600480360381019061029a91906113f8565b610675565b005b6102bb60048036038101906102b691906111d3565b610682565b6040516102c8919061122e565b60405180910390f35b6102d96106a5565b6040516102e691906113dd565b60405180910390f35b61030960048036038101906103049190611335565b6106cb565b005b61032560048036038101906103209190611425565b610786565b6040516103329190611258565b60405180910390f35b61034361080d565b6040516103509190611290565b60405180910390f35b610373600480360381019061036e9190611335565b610812565b005b60606003805461038490611494565b80601f01602080910402602001604051908101604052809291908181526020018280546103b090611494565b80156103fd5780601f106103d2576101008083540402835291602001916103fd565b820191906000526020600020905b8154815290600101906020018083116103e057829003601f168201915b5050505050905090565b600080610412610898565b905061041f8185856108a0565b600191505092915050565b6000600254905090565b600181565b600080610444610898565b90506104518582856108b2565b61045c858585610947565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104c1610a3b565b6104cb6000610ac2565b565b60008211610510576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050790611511565b60405180910390fd5b8161051a33610471565b101561055b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105529061157d565b60405180910390fd5b6105653383610b88565b3373ffffffffffffffffffffffffffffffffffffffff167f926a47ad1a3e1507a189732b90d8474403e16fcd7d68a84e7b46dc8e0a81782483836040516105ad92919061159d565b60405180910390a25050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105f290611494565b80601f016020809104026020016040519081016040528092919081815260200182805461061e90611494565b801561066b5780601f106106405761010080835404028352916020019161066b565b820191906000526020600020905b81548152906001019060200180831161064e57829003601f168201915b5050505050905090565b61067f3382610c0a565b50565b60008061068d610898565b905061069a818585610947565b600191505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106d3610a3b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073990611638565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60b881565b61081a610a3b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361088c5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161088391906113dd565b60405180910390fd5b61089581610ac2565b50565b600033905090565b6108ad8383836001610c8c565b505050565b60006108be8484610786565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156109415781811015610931578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161092893929190611658565b60405180910390fd5b61094084848484036000610c8c565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109b95760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109b091906113dd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a2b5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a2291906113dd565b60405180910390fd5b610a36838383610e63565b505050565b610a43610898565b73ffffffffffffffffffffffffffffffffffffffff16610a616105b9565b73ffffffffffffffffffffffffffffffffffffffff1614610ac057610a84610898565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ab791906113dd565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bfa5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610bf191906113dd565b60405180910390fd5b610c0682600083610e63565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c7c5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c7391906113dd565b60405180910390fd5b610c8860008383610e63565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610cfe5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610cf591906113dd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d705760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d6791906113dd565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610e5d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e549190611258565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eb5578060026000828254610ea991906116be565b92505081905550610f88565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f41578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f3893929190611658565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fd1578060026000828254039250508190555061101e565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161107b9190611258565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110c25780820151818401526020810190506110a7565b60008484015250505050565b6000601f19601f8301169050919050565b60006110ea82611088565b6110f48185611093565b93506111048185602086016110a4565b61110d816110ce565b840191505092915050565b6000602082019050818103600083015261113281846110df565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061116a8261113f565b9050919050565b61117a8161115f565b811461118557600080fd5b50565b60008135905061119781611171565b92915050565b6000819050919050565b6111b08161119d565b81146111bb57600080fd5b50565b6000813590506111cd816111a7565b92915050565b600080604083850312156111ea576111e961113a565b5b60006111f885828601611188565b9250506020611209858286016111be565b9150509250929050565b60008115159050919050565b61122881611213565b82525050565b6000602082019050611243600083018461121f565b92915050565b6112528161119d565b82525050565b600060208201905061126d6000830184611249565b92915050565b600061ffff82169050919050565b61128a81611273565b82525050565b60006020820190506112a56000830184611281565b92915050565b6000806000606084860312156112c4576112c361113a565b5b60006112d286828701611188565b93505060206112e386828701611188565b92505060406112f4868287016111be565b9150509250925092565b600060ff82169050919050565b611314816112fe565b82525050565b600060208201905061132f600083018461130b565b92915050565b60006020828403121561134b5761134a61113a565b5b600061135984828501611188565b91505092915050565b61136b81611273565b811461137657600080fd5b50565b60008135905061138881611362565b92915050565b600080604083850312156113a5576113a461113a565b5b60006113b3858286016111be565b92505060206113c485828601611379565b9150509250929050565b6113d78161115f565b82525050565b60006020820190506113f260008301846113ce565b92915050565b60006020828403121561140e5761140d61113a565b5b600061141c848285016111be565b91505092915050565b6000806040838503121561143c5761143b61113a565b5b600061144a85828601611188565b925050602061145b85828601611188565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114ac57607f821691505b6020821081036114bf576114be611465565b5b50919050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f600082015250565b60006114fb602083611093565b9150611506826114c5565b602082019050919050565b6000602082019050818103600083015261152a816114ee565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000611567601483611093565b915061157282611531565b602082019050919050565b600060208201905081810360008301526115968161155a565b9050919050565b60006040820190506115b26000830185611249565b6115bf6020830184611281565b9392505050565b7f4c5a20656e64706f696e742063616e6e6f74206265207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611622602283611093565b915061162d826115c6565b604082019050919050565b6000602082019050818103600083015261165181611615565b9050919050565b600060608201905061166d60008301866113ce565b61167a6020830185611249565b6116876040830184611249565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116c98261119d565b91506116d48361119d565b92508282019050808211156116ec576116eb61168f565b5b9291505056fea2646970667358221220f264f9bdd5852a80f4a893bcc7b7d069a266e95360919db372cf5e3f47007cf864736f6c634300081c0033";

type SimpleOFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleOFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleOFT__factory extends ContractFactory {
  constructor(...args: SimpleOFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    _lzEndpoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      _lzEndpoint,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    _lzEndpoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, _lzEndpoint, overrides || {}) as Promise<
      SimpleOFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleOFT__factory {
    return super.connect(runner) as SimpleOFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleOFTInterface {
    return new Interface(_abi) as SimpleOFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimpleOFT {
    return new Contract(address, _abi, runner) as unknown as SimpleOFT;
  }
}
